set_cover:
  alias: Set Cover
  mode: parallel
  sequence:
  - service: input_number.set_value
    target:
      entity_id: input_number.{{ entity }}_last
    data:
      value: '{{ state_attr("cover." ~ entity ~ "_window_covering", "current_position") }}'
  - service: cover.set_cover_position
    target:
      entity_id: cover.{{ entity }}_window_covering
    data:
      position: '{{ states("input_number." ~ entity ~ "_" ~ type) }}'
set_covers:
  alias: Set Covers
  mode: parallel
  sequence:
  - repeat:
      for_each: "{{ entities }}"
      sequence:
      - service: script.set_cover
        data:
          entity: "{{ repeat.item }}"
          type: "{{ type }}"
reset_cover:
  alias: Reset Cover
  mode: parallel
  sequence:
  - service: cover.set_cover_position
    target:
      entity_id: cover.{{ entity }}_window_covering
    data:
      position: '{{ states("input_number." ~ entity ~ "_last") }}'
reset_covers:
  alias: Reset Covers
  mode: parallel
  sequence:
  - repeat:
      for_each: "{{ entities }}"
      sequence:
      - service: script.reset_cover
        data:
          entity: "{{ repeat.item }}"

clean_rooms:
  alias: Clean a List of Rooms
  mode: restart
  sequence:
  - variables:
      zones:
        bathroom: !include vacuum-zones/bathroom.yaml
        bedroom: !include vacuum-zones/bedroom.yaml
        closet: !include vacuum-zones/closet.yaml
        office: !include vacuum-zones/office.yaml
        baby: !include vacuum-zones/baby.yaml
        gym: !include vacuum-zones/gym.yaml
        kids_bathroom: !include vacuum-zones/kids-bathroom.yaml
        guest: !include vacuum-zones/guest.yaml
        hall: !include vacuum-zones/hall.yaml
  - repeat:
      for_each: "{{ rooms }}"
      sequence:
      - service: vacuum.pause
        target:
          entity_id: vacuum.the_langefelds_cleaning_robot
      - wait_template: "{{ states('vacuum.the_langefelds_cleaning_robot') in ['idle', 'docked', 'paused'] }}"
      - service: xiaomi_miio.vacuum_clean_zone
        data:
          repeats: 1
          zone: '{{ zones[repeat.item] }}'
        target:
          entity_id: vacuum.the_langefelds_cleaning_robot
      - wait_template: "{{ is_state('vacuum.the_langefelds_cleaning_robot', 'cleaning') }}"
      - wait_template: "{{ states('vacuum.the_langefelds_cleaning_robot') in ['idle', 'docked', 'returning'] }}"
