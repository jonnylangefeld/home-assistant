set_cover:
  alias: Set Cover
  mode: parallel
  sequence:
  - service: input_number.set_value
    target:
      entity_id: input_number.{{ entity }}_last
    data:
      value: '{{ state_attr("cover." ~ entity ~ "_window_covering", "current_position") }}'
  - service: cover.set_cover_position
    target:
      entity_id: cover.{{ entity }}_window_covering
    data:
      position: '{{ states("input_number." ~ entity ~ "_" ~ type) }}'
set_covers:
  alias: Set Covers
  mode: parallel
  sequence:
  - repeat:
      for_each: "{{ entities }}"
      sequence:
      - service: script.set_cover
        data:
          entity: "{{ repeat.item }}"
          type: "{{ type }}"
reset_cover:
  alias: Reset Cover
  mode: parallel
  sequence:
  - service: cover.set_cover_position
    target:
      entity_id: cover.{{ entity }}_window_covering
    data:
      position: '{{ states("input_number." ~ entity ~ "_last") }}'
reset_covers:
  alias: Reset Covers
  mode: parallel
  sequence:
  - repeat:
      for_each: "{{ entities }}"
      sequence:
      - service: script.reset_cover
        data:
          entity: "{{ repeat.item }}"
clean_rooms:
  alias: Clean a List of Rooms
  mode: restart
  sequence:
  - variables:
      zones:
        bathroom: !include ../vacuum-zones/bathroom.yaml
        bedroom: !include ../vacuum-zones/bedroom.yaml
        closet: !include ../vacuum-zones/closet.yaml
        office: !include ../vacuum-zones/office.yaml
        baby: !include ../vacuum-zones/baby.yaml
        gym: !include ../vacuum-zones/gym.yaml
        kids_bathroom: !include ../vacuum-zones/kids-bathroom.yaml
        guest: !include ../vacuum-zones/guest.yaml
        hall: !include ../vacuum-zones/hall.yaml
  - repeat:
      for_each: "{{ rooms }}"
      sequence:
      - &pause
        service: vacuum.pause
        target:
          entity_id: vacuum.the_langefelds_cleaning_robot
      - wait_template: "{{ states('vacuum.the_langefelds_cleaning_robot') in ['idle', 'docked', 'paused'] }}"
      - if:
        - alias: "is bedroom"
          condition: template
          value_template: '{{ repeat.item == "bedroom" }}'
        then:
        - &go_to_corner
          service: xiaomi_miio.vacuum_goto
          data:
            x_coord: '34754'
            y_coord: '31274'
          target:
            entity_id: vacuum.the_langefelds_cleaning_robot
        - &wait_for_cleaning 
          wait_template: "{{ is_state('vacuum.the_langefelds_cleaning_robot', 'cleaning') }}"
        - &wait_for_finished
          wait_template: "{{ states('vacuum.the_langefelds_cleaning_robot') in ['idle', 'docked', 'returning'] }}"
        - *pause
        - service: xiaomi_miio.vacuum_clean_zone
          data:
            repeats: 1
            zone:
            - '{{ zones[repeat.item][0] }}'
          target:
            entity_id: vacuum.the_langefelds_cleaning_robot
        - *wait_for_cleaning
        - *wait_for_finished
        - *pause
        - *go_to_corner
        - *wait_for_cleaning
        - *wait_for_finished
        - *pause
        - service: xiaomi_miio.vacuum_clean_zone
          data:
            repeats: 1
            zone:
            - '{{ zones[repeat.item][1] }}'
          target:
            entity_id: vacuum.the_langefelds_cleaning_robot
        else:
        - service: xiaomi_miio.vacuum_clean_zone
          data:
            repeats: 1
            zone: '{{ zones[repeat.item] }}'
          target:
            entity_id: vacuum.the_langefelds_cleaning_robot
      - *wait_for_cleaning
      - *wait_for_finished
clean_upstairs:
  alias: 'Clean Upstairs'
  sequence:
  - service: script.clean_rooms
    data:
      rooms:
      - hall
      - bedroom
      - bathroom
      - closet
      - guest
      - office
      - baby
      - kids_bathroom
      - gym
stop_cleaner:
  alias: 'Stop the Cleaner'
  sequence:
  - service: script.turn_off
    target:
      entity_id: script.clean_rooms
  - service: vacuum.return_to_base
    target:
      entity_id: vacuum.the_langefelds_cleaning_robot
